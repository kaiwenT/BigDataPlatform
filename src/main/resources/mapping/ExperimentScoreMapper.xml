<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.bigdataplatform.dao.mapper.ExperimentScoreMapper">
  <resultMap id="BaseResultMap" type="com.hust.bigdataplatform.model.ExperimentScore">
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <id column="experiment_id" jdbcType="VARCHAR" property="experimentId" />
    <result column="resultsScore" jdbcType="INTEGER" property="resultsscore" />
    <result column="reportScore" jdbcType="INTEGER" property="reportscore" />
    <result column="exp_finalScore" jdbcType="INTEGER" property="expFinalscore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, experiment_id, resultsScore, reportScore, exp_finalScore
  </sql>
  <select id="selectByExample" parameterType="com.hust.bigdataplatform.model.ExperimentScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from experiment_score
    where student_id = #{studentId,jdbcType=VARCHAR}
      and experiment_id = #{experimentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from experiment_score
    where student_id = #{studentId,jdbcType=VARCHAR}
      and experiment_id = #{experimentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hust.bigdataplatform.model.ExperimentScoreExample">
    delete from experiment_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.bigdataplatform.model.ExperimentScore">
    insert into experiment_score (student_id, experiment_id, resultsScore, 
      reportScore, exp_finalScore)
    values (#{studentId,jdbcType=VARCHAR}, #{experimentId,jdbcType=VARCHAR}, #{resultsscore,jdbcType=INTEGER}, 
      #{reportscore,jdbcType=INTEGER}, #{expFinalscore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.bigdataplatform.model.ExperimentScore">
    insert into experiment_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="experimentId != null">
        experiment_id,
      </if>
      <if test="resultsscore != null">
        resultsScore,
      </if>
      <if test="reportscore != null">
        reportScore,
      </if>
      <if test="expFinalscore != null">
        exp_finalScore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="experimentId != null">
        #{experimentId,jdbcType=VARCHAR},
      </if>
      <if test="resultsscore != null">
        #{resultsscore,jdbcType=INTEGER},
      </if>
      <if test="reportscore != null">
        #{reportscore,jdbcType=INTEGER},
      </if>
      <if test="expFinalscore != null">
        #{expFinalscore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hust.bigdataplatform.model.ExperimentScoreExample" resultType="java.lang.Long">
    select count(*) from experiment_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update experiment_score
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.experimentId != null">
        experiment_id = #{record.experimentId,jdbcType=VARCHAR},
      </if>
      <if test="record.resultsscore != null">
        resultsScore = #{record.resultsscore,jdbcType=INTEGER},
      </if>
      <if test="record.reportscore != null">
        reportScore = #{record.reportscore,jdbcType=INTEGER},
      </if>
      <if test="record.expFinalscore != null">
        exp_finalScore = #{record.expFinalscore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update experiment_score
    set student_id = #{record.studentId,jdbcType=VARCHAR},
      experiment_id = #{record.experimentId,jdbcType=VARCHAR},
      resultsScore = #{record.resultsscore,jdbcType=INTEGER},
      reportScore = #{record.reportscore,jdbcType=INTEGER},
      exp_finalScore = #{record.expFinalscore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.bigdataplatform.model.ExperimentScore">
    update experiment_score
    <set>
      <if test="resultsscore != null">
        resultsScore = #{resultsscore,jdbcType=INTEGER},
      </if>
      <if test="reportscore != null">
        reportScore = #{reportscore,jdbcType=INTEGER},
      </if>
      <if test="expFinalscore != null">
        exp_finalScore = #{expFinalscore,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
      and experiment_id = #{experimentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.bigdataplatform.model.ExperimentScore">
    update experiment_score
    set resultsScore = #{resultsscore,jdbcType=INTEGER},
      reportScore = #{reportscore,jdbcType=INTEGER},
      exp_finalScore = #{expFinalscore,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=VARCHAR}
      and experiment_id = #{experimentId,jdbcType=VARCHAR}
  </update>
</mapper>