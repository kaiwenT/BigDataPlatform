<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.bigdataplatform.dao.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.hust.bigdataplatform.model.Course">
    <id column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_beginTime" jdbcType="TIMESTAMP" property="courseBegintime" />
    <result column="course_credit" jdbcType="INTEGER" property="courseCredit" />
    <result column="course_path" jdbcType="VARCHAR" property="coursePath" />
    <result column="course_UsualGradesScale" jdbcType="REAL" property="courseUsualgradesscale" />
    <result column="course_videoPath" jdbcType="VARCHAR" property="courseVideopath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, course_beginTime, course_credit, course_path, course_UsualGradesScale, 
    course_videoPath
  </sql>
  <select id="selectByExample" parameterType="com.hust.bigdataplatform.model.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hust.bigdataplatform.model.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.bigdataplatform.model.Course">
    insert into course (course_id, course_name, course_beginTime, 
      course_credit, course_path, course_UsualGradesScale, 
      course_videoPath)
    values (#{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{courseBegintime,jdbcType=TIMESTAMP}, 
      #{courseCredit,jdbcType=INTEGER}, #{coursePath,jdbcType=VARCHAR}, #{courseUsualgradesscale,jdbcType=REAL}, 
      #{courseVideopath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.bigdataplatform.model.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseBegintime != null">
        course_beginTime,
      </if>
      <if test="courseCredit != null">
        course_credit,
      </if>
      <if test="coursePath != null">
        course_path,
      </if>
      <if test="courseUsualgradesscale != null">
        course_UsualGradesScale,
      </if>
      <if test="courseVideopath != null">
        course_videoPath,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseBegintime != null">
        #{courseBegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseCredit != null">
        #{courseCredit,jdbcType=INTEGER},
      </if>
      <if test="coursePath != null">
        #{coursePath,jdbcType=VARCHAR},
      </if>
      <if test="courseUsualgradesscale != null">
        #{courseUsualgradesscale,jdbcType=REAL},
      </if>
      <if test="courseVideopath != null">
        #{courseVideopath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hust.bigdataplatform.model.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseBegintime != null">
        course_beginTime = #{record.courseBegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseCredit != null">
        course_credit = #{record.courseCredit,jdbcType=INTEGER},
      </if>
      <if test="record.coursePath != null">
        course_path = #{record.coursePath,jdbcType=VARCHAR},
      </if>
      <if test="record.courseUsualgradesscale != null">
        course_UsualGradesScale = #{record.courseUsualgradesscale,jdbcType=REAL},
      </if>
      <if test="record.courseVideopath != null">
        course_videoPath = #{record.courseVideopath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_beginTime = #{record.courseBegintime,jdbcType=TIMESTAMP},
      course_credit = #{record.courseCredit,jdbcType=INTEGER},
      course_path = #{record.coursePath,jdbcType=VARCHAR},
      course_UsualGradesScale = #{record.courseUsualgradesscale,jdbcType=REAL},
      course_videoPath = #{record.courseVideopath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.bigdataplatform.model.Course">
    update course
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseBegintime != null">
        course_beginTime = #{courseBegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseCredit != null">
        course_credit = #{courseCredit,jdbcType=INTEGER},
      </if>
      <if test="coursePath != null">
        course_path = #{coursePath,jdbcType=VARCHAR},
      </if>
      <if test="courseUsualgradesscale != null">
        course_UsualGradesScale = #{courseUsualgradesscale,jdbcType=REAL},
      </if>
      <if test="courseVideopath != null">
        course_videoPath = #{courseVideopath,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.bigdataplatform.model.Course">
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_beginTime = #{courseBegintime,jdbcType=TIMESTAMP},
      course_credit = #{courseCredit,jdbcType=INTEGER},
      course_path = #{coursePath,jdbcType=VARCHAR},
      course_UsualGradesScale = #{courseUsualgradesscale,jdbcType=REAL},
      course_videoPath = #{courseVideopath,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
</mapper>