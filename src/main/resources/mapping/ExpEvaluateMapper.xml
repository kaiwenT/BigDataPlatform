<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.bigdataplatform.dao.mapper.ExpEvaluateMapper">
  <resultMap id="BaseResultMap" type="com.hust.bigdataplatform.model.ExpEvaluate">
    <id column="experiment_id" jdbcType="VARCHAR" property="experimentId" />
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <id column="evaluator" jdbcType="VARCHAR" property="evaluator" />
    <result column="evaluateSore" jdbcType="INTEGER" property="evaluatesore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    experiment_id, student_id, evaluator, evaluateSore
  </sql>
  <select id="selectByExample" parameterType="com.hust.bigdataplatform.model.ExpEvaluateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exp_evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from exp_evaluate
    where experiment_id = #{experimentId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
      and evaluator = #{evaluator,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from exp_evaluate
    where experiment_id = #{experimentId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
      and evaluator = #{evaluator,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hust.bigdataplatform.model.ExpEvaluateExample">
    delete from exp_evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.bigdataplatform.model.ExpEvaluate">
    insert into exp_evaluate (experiment_id, student_id, evaluator, 
      evaluateSore)
    values (#{experimentId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, #{evaluator,jdbcType=VARCHAR}, 
      #{evaluatesore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.bigdataplatform.model.ExpEvaluate">
    insert into exp_evaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="experimentId != null">
        experiment_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="evaluator != null">
        evaluator,
      </if>
      <if test="evaluatesore != null">
        evaluateSore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="experimentId != null">
        #{experimentId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="evaluator != null">
        #{evaluator,jdbcType=VARCHAR},
      </if>
      <if test="evaluatesore != null">
        #{evaluatesore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hust.bigdataplatform.model.ExpEvaluateExample" resultType="java.lang.Long">
    select count(*) from exp_evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exp_evaluate
    <set>
      <if test="record.experimentId != null">
        experiment_id = #{record.experimentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluator != null">
        evaluator = #{record.evaluator,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluatesore != null">
        evaluateSore = #{record.evaluatesore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exp_evaluate
    set experiment_id = #{record.experimentId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      evaluator = #{record.evaluator,jdbcType=VARCHAR},
      evaluateSore = #{record.evaluatesore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.bigdataplatform.model.ExpEvaluate">
    update exp_evaluate
    <set>
      <if test="evaluatesore != null">
        evaluateSore = #{evaluatesore,jdbcType=INTEGER},
      </if>
    </set>
    where experiment_id = #{experimentId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
      and evaluator = #{evaluator,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.bigdataplatform.model.ExpEvaluate">
    update exp_evaluate
    set evaluateSore = #{evaluatesore,jdbcType=INTEGER}
    where experiment_id = #{experimentId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
      and evaluator = #{evaluator,jdbcType=VARCHAR}
  </update>
</mapper>