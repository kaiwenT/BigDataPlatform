<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.bigdataplatform.dao.mapper.StudentCourseMapper">
  <resultMap id="BaseResultMap" type="com.hust.bigdataplatform.model.StudentCourse">
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <id column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="student_groupId" jdbcType="VARCHAR" property="studentGroupid" />
    <result column="attendanceRate" jdbcType="INTEGER" property="attendancerate" />
    <result column="finalResult" jdbcType="INTEGER" property="finalresult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, course_id, student_groupId, attendanceRate, finalResult
  </sql>
  <select id="selectByExample" parameterType="com.hust.bigdataplatform.model.StudentCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from student_course
    where student_id = #{studentId,jdbcType=VARCHAR}
      and course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from student_course
    where student_id = #{studentId,jdbcType=VARCHAR}
      and course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hust.bigdataplatform.model.StudentCourseExample">
    delete from student_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.bigdataplatform.model.StudentCourse">
    insert into student_course (student_id, course_id, student_groupId, 
      attendanceRate, finalResult)
    values (#{studentId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{studentGroupid,jdbcType=VARCHAR}, 
      #{attendancerate,jdbcType=INTEGER}, #{finalresult,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.bigdataplatform.model.StudentCourse">
    insert into student_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="studentGroupid != null">
        student_groupId,
      </if>
      <if test="attendancerate != null">
        attendanceRate,
      </if>
      <if test="finalresult != null">
        finalResult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="studentGroupid != null">
        #{studentGroupid,jdbcType=VARCHAR},
      </if>
      <if test="attendancerate != null">
        #{attendancerate,jdbcType=INTEGER},
      </if>
      <if test="finalresult != null">
        #{finalresult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hust.bigdataplatform.model.StudentCourseExample" resultType="java.lang.Long">
    select count(*) from student_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_course
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentGroupid != null">
        student_groupId = #{record.studentGroupid,jdbcType=VARCHAR},
      </if>
      <if test="record.attendancerate != null">
        attendanceRate = #{record.attendancerate,jdbcType=INTEGER},
      </if>
      <if test="record.finalresult != null">
        finalResult = #{record.finalresult,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_course
    set student_id = #{record.studentId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      student_groupId = #{record.studentGroupid,jdbcType=VARCHAR},
      attendanceRate = #{record.attendancerate,jdbcType=INTEGER},
      finalResult = #{record.finalresult,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.bigdataplatform.model.StudentCourse">
    update student_course
    <set>
      <if test="studentGroupid != null">
        student_groupId = #{studentGroupid,jdbcType=VARCHAR},
      </if>
      <if test="attendancerate != null">
        attendanceRate = #{attendancerate,jdbcType=INTEGER},
      </if>
      <if test="finalresult != null">
        finalResult = #{finalresult,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
      and course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.bigdataplatform.model.StudentCourse">
    update student_course
    set student_groupId = #{studentGroupid,jdbcType=VARCHAR},
      attendanceRate = #{attendancerate,jdbcType=INTEGER},
      finalResult = #{finalresult,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=VARCHAR}
      and course_id = #{courseId,jdbcType=VARCHAR}
  </update>
</mapper>